@page "/abonosindex/abonar/{AbonoId:int}"

@attribute [Authorize]
@inject IJSRuntime JSRuntime
@inject IServerAsp<ApplicationUser> usuariosService
@inject AuthenticationStateProvider AuthenticationState
@inject AbonosService abonosService
@inject IServer<Configuraciones> configuracionesService
@inject IServer<MetodoPagos> metodosPagosService
@inject IdentityUserService identityUserService
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@rendermode InteractiveServer

<PageTitle>Abonos</PageTitle>
<RadzenNotification />
<div class="container">
    <div class="card shadow">
        <div class="card-header">
            <h1 class="text-light">Abono</h1>
        </div>
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <AuthorizeView Roles="Admin">
                        <p><strong> AbonoId:</strong> @abono.AbonoId</p>
                        <p><strong> VentaId:</strong> @abono.VentaId</p>
                    </AuthorizeView>
                    <p><strong> Monto:</strong> @abono.Monto.ToString("N2")</p>
                    <p><strong> Restante:</strong> @abono.Restante.ToString("N2")</p>
                    <p><strong> Fecha:</strong> @abono.Fecha.ToString("dd/MM/yyyy")</p>
                    <p><strong> Nombre del Cliente:</strong> @usuario.Nombre</p>
                </div>
            </div>
            <table class="table table-bordered text-center">
                <thead>
                    <tr>
                        <th>Monto Abonado</th>
                        <th>M&eacute;todo de Pago</th>
                        <th>Fecha</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var detalle in abono.AbonoDetalle)
                    {
                        var metodoPago = metodosPagos.FirstOrDefault(m => m.MetodoPagoId == detalle.MetodoPagoId);
                        <tr>
                            <td>@detalle.Monto.ToString("N2")</td>
                            @if (metodoPago != null)
                            {
                                <td>@metodoPago.Nombre</td>
                            }
                            else
                            {
                                <td>Desconocido</td>
                            }
                            <td>@detalle.Fecha.ToString("dd/MM/yyyy")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="card-footer d-flex justify-content-end input-group">
            <a href="/AbonosIndex" class="btn btn-primary bi bi-house-door-fill">Volver</a>
            <button class="btn btn-success bi bi-plus" @onclick=@(() => abonar = true)>Abonar</button>
        </div>
    </div>
</div>

@if (abonar)
{
    <div class="modal d-block opaco">
        <div class="modal-dialog modal-dialog-centered">
            <RadzenNotification />
            <div class="modal-content">

                <div class="modal-header" style="background:#399ce7 ">
                    <h5 class="modal-title fw-bold text-white"><img style="width: 20px; height: 20px;" src="/bootstrap/img/money.png" /> Abono</h5>
                    <button type="button" class="btn bg-danger text-white" @onclick="CerrarAbono">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">

                        @if (abono.ClienteId != null)
                        {
                            <div class="col-12">
                                <label class="fw-bold">Nombre de Cliente:</label>
                                <InputText @bind-Value="usuario!.Nombre" class="form-control" disabled="true"></InputText>
                            </div>
                        }

                        <div class="col-12">
                            <label class="fw-bold">Metodo de Pago:</label>
                            <InputSelect @bind-Value="Abonodetalles.MetodoPagoId" class="form-select">
                                @foreach (var item in metodosPagos)
                                {
                                    if (item.MetodoPagoId == 1)
                                    {
                                        <AuthorizeView Roles="Admin">
                                            <option value="@item.MetodoPagoId">@item.Nombre</option>
                                        </AuthorizeView>
                                    }
                                    else
                                    {
                                        <option value="@item.MetodoPagoId">@item.Nombre</option>
                                    }
                                }
                            </InputSelect>
                        </div>

                        @if (Abonodetalles.MetodoPagoId == 1)
                        {
                            <div class="col-12">
                                <label class="fw-bold">Cantidad Abonar</label>
                                <InputNumber @bind-Value="Abonodetalles.Monto" class="form-control" min="0.01"></InputNumber>
                            </div>
                            <div class="modal-footer col col-12">
                                <button type="button" class="btn btn-success" @onclick="RealizarAbono">Abonar</button>
                            </div>
                        }
                        @if (Abonodetalles.MetodoPagoId == 2)
                        {
                            <EditForm Model="input" OnValidSubmit="RealizarAbono">
                                <DataAnnotationsValidator />
                                <div class="col-12">
                                    <label class="fw-bold">Numero de Tarjeta:</label>
                                    <div class="input-group">
                                        <InputText @bind-Value="input.NumeroTarjeta" class="form-control">
                                        </InputText>
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <img src="/bootstrap/img/mastercard.svg" class="img-fluid" alt="Mastercard Logo" style="width: 25px; height: 25px;">
                                                <img src="/bootstrap/img/visa.svg" class="img-fluid" alt="Visa Logo" style="width: 25px; height: 25px;">
                                                <img src="/bootstrap/img/amex.svg" class="img-fluid" alt="Visa Logo" style="width: 25px; height: 25px;">
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <ValidationMessage For="@(() => input.NumeroTarjeta)" class="alert alert-danger" />
                                <div class="col-12">
                                    <div class="row">
                                        <div class="col-6">
                                            <label class="fw-bold">Numero de Seguridad:</label>
                                            <div class="input-group">
                                                <InputText @bind-Value="input.NumeroSeguridad" class="form-control"></InputText>
                                                <div class="input-group-append">
                                                    <span class="input-group-text">
                                                        <img src="/bootstrap/img/cvv_card.svg" class="img-fluid" alt="Mastercard Logo" style="width: 25px; height: 25px;">
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <label class="fw-bold">Fecha de Expiraci&oacute;n:</label>
                                            <InputDate @bind-Value="input.FechaExpiracion" class="form-control"></InputDate>
                                        </div>
                                        <ValidationMessage For="@(() => input.NumeroSeguridad)" class="alert alert-danger" />
                                        @if (input.FechaExpiracion <= DateTime.Now)
                                        {
                                            var validationMessage = ValidateFechaExpiracion(input.FechaExpiracion);
                                            if (validationMessage != null)
                                            {
                                                <div class="alert alert-info" role="alert">@validationMessage</div>
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="col-12">
                                    <label class="fw-bold">Cantidad Abonar</label>
                                    <InputNumber @bind-Value="Abonodetalles.Monto" class="form-control" min="0.01"></InputNumber>
                                    <ValidationMessage For="@(() => Abonodetalles.Monto)" class="alert alert-danger" />
                                </div>
                                <div class="modal-footer col col-12">
                                    <button type="submit" class="btn btn-success">Abonar</button>
                                </div>
                            </EditForm>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

}


@if (factura)
{
    <div class="modal d-block opaco">
        <RadzenNotification />
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header" style="background:#399ce7 ">
                    <h5 class="modal-title fw-bold text-white"><img style="width: 20px; height: 20px;" src="/bootstrap/img/venta.png" /> Factura</h5>
                    <div class="justify-content-end d-flex">
                        <button type="button" class="btn bg-muted text-white" style="background: #ffe085" @onclick="ImprimirFactura">
                            <img style="width: 15px; height: 15px;" src="/bootstrap/img/printer.svg" />
                        </button>
                        <button type="button" class="btn bg-danger text-white" @onclick="Cerrar">
                            <i class="bi bi-x"></i>
                        </button>
                    </div>
                </div>
                <div id="factura" class="modal-body" style="height: 35rem; overflow-y: auto;">

                    <div class="position-relative modalContenedor">

                        <div class="row d-flex align-items-center justify-content-center">
                            <div id="logoEmpresa" class="text-center">
                                <img style="width: 150px; height: 120px; border-radius: 10%;" src="@getLogo()" />
                            </div>
                            <h4 class="fw-bold fs-4 text-center" style="margin-top: -8px; justify-content: center; text-align: center;">@configuracion.NombreEmpresa</h4>

                            <div class="row" style="margin-top: -12px; justify-content: center; text-align: center;">
                                <div class="col-6 text-start">
                                    <label class="fw-bold"> <i class="fas fa-phone"></i> Telf.: <span class="fw-normal">@configuracion.Telefono</span></label>
                                </div>
                                <div class="col-6 text-end">
                                    <label class="fw-bold"> <i class="fas fa-building"></i> RNC: <span class="fw-normal">@configuracion.NFC</span></label>
                                </div>
                            </div>

                            <div id="direccionEmpresa" class="fw-bold text-center">
                                <label> <i class="fas fa-map-marker"></i> Dirc.: <span class="fw-normal">@configuracion.Direccion</span></label>
                            </div>
                        </div>
                        <hr>
                        <h5 class="fw-bold text-center titular" style="font-size: 14px; font-weight: bold;">ABONO</h5>
                        <hr>
                        <div class="row">
                            <div class="col text-start">
                                <label class="fw-bold" style="font-size: 12px;">Emitido: <span class="fw-normal"> @abono.Fecha.ToString("dd/MM/yyyy")</span></label>
                            </div>
                            @if(usuario != null)
                            {
                                <div class="text-start">
                                    <label class="fw-bold" style="font-size: 12px;">Cliente: <span class="fw-normal">@usuario.Nombre</span></label>
                                </div>
                                <div class="text-start">
                                    <label class="fw-bold" style="font-size: 12px;">Apellido: <span class="fw-normal">@usuario!.Apellido</span></label>
                                </div>
                                <div class="text-start">
                                    <label class="fw-bold" style="font-size: 12px;">Email: <span class="fw-normal">@usuario.Email</span></label>
                                </div>
                            }
                        </div>
                        <hr>
                        <h5 class="fw-bold text-center titular" style="font-size: 14px; font-weight: bold;">DETALLE DEL ABONO</h5>
                        <hr>
                        <div class="row mb-4">
                            <table>
                                <thead>
                                    <tr>
                                        <th>Monto Abonado</th>
                                        <th class="text-end derecha">M&eacute;todo de Pago</th>
                                        <th class="text-end derecha">Fecha</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in abono.AbonoDetalle)
                                    {
                                        var metodo = metodosPagos.FirstOrDefault(m => m.MetodoPagoId == item.MetodoPagoId);
                                        <tr>
                                            <td>@item.Monto.ToString("N2")</td>
                                           @if(metodo != null)
                                            {
                                                <td class="text-center derecha">@metodo.Nombre</td>
                                            }
                                            else
                                            {
                                                <td class="text-end derecha">Desconocido</td>
                                            }
                                            <td class="text-end derecha">@item.Fecha.ToString("dd/MM/yyyy")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div style="margin-right: 10px">
                            <div class="row mb-5" style="text-align: end">

                                <div class="datoInferior">
                                    <div>
                                        <label class="fw-bold">Deuda:</label>
                                        <span>RD$ @abono.Monto.ToString("N2")</span>
                                    </div>
                                    <div>
                                        <label class="fw-bold">Pendiente:</label>
                                        <span>RD$ @abono.Restante.ToString("N2")</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {

    public string rol = "";
    public bool factura = false;
    public bool abonar = false;
    [Parameter]
    public int AbonoId { get; set; }
    public int metodo { get; set; } = 0;
    public Abonos abono { get; set; } = new Abonos();
    public AbonosDetalle Abonodetalles = new AbonosDetalle();
    private Input input { get; set; } = new();
    public ApplicationUser usuario { get; set; } = new ApplicationUser();
    public AuthenticationState authState { get; set; } = default!;

    public Configuraciones configuracion { get; set; } = new Configuraciones();
    public List<MetodoPagos> metodosPagos { get; set; } = new List<MetodoPagos>();
    public List<Configuraciones> configuraciones { get; set; } = new List<Configuraciones>();
    public List<ApplicationUser> usuarios { get; set; } = new List<ApplicationUser>();


    protected override async Task OnInitializedAsync()
    {
        if (AbonoId > 0)
        {
            abono = await abonosService.GetObject(AbonoId);
            usuarios = await usuariosService.GetAllObject();
            authState = await AuthenticationState.GetAuthenticationStateAsync();
            usuario = (usuarios.FirstOrDefault(u => u.UserName == authState.User.Identity?.Name))!;
            var roll = await identityUserService.GetRoleAsync(usuario);
            rol = roll.Name!;
            if (rol == "Cliente" && usuario.Id != abono.ClienteId)
            {
                NavigationManager.NavigateTo("AbonosIndex");
            }
            usuario = (usuarios.FirstOrDefault(u => u.Id == abono.ClienteId))!;
            metodosPagos = await metodosPagosService.GetAllObject();
            configuraciones = await configuracionesService.GetAllObject();
            configuracion = configuraciones.FirstOrDefault()!;
            Abonodetalles.Fecha = DateTime.Now;
            input.FechaExpiracion = DateTime.Now;
            Abonodetalles.MetodoPagoId = 1;
        }
    }

    public string obtenerLogo()
    {
        if (configuracion.Imagen != null && configuracion.Imagen.Length > 0)
        {
            string base64String = Convert.ToBase64String(configuracion.Imagen);
            return $"data:image/png;base64,{base64String}";
        }
        else
        {
            return "/bootstrap/img/ejemplo.png";
        }
    }

    public void Cerrar()
    {
        factura = false;
    }

    public async Task ImprimirFactura()
    {
        factura = false;
        await JSRuntime.InvokeVoidAsync("ImprimirF");
    }

    public void CerrarAbono()
    {
        abonar = false;
    }


    private string ValidateFechaExpiracion(DateTime fecha)
    {
        if (fecha <= DateTime.Now)
        {
            return "La fecha de expiración debe ser posterior a la fecha actual.";
        }
        return null!;
    }

    private sealed class Input
    {
        [Required(ErrorMessage = "El número de la tarjeta es requerido")]
        [RegularExpression(@"^[0-9]{16}$", ErrorMessage = "El número de tarjeta debe tener 16 dígitos")]
        [Display(Name = "Numero de la Tarjeta")]
        public string? NumeroTarjeta { get; set; }

        [Required(ErrorMessage = "El número de seguridad es requerido")]
        [RegularExpression(@"^[0-9]+$", ErrorMessage = "El número de seguridad solo puede contener dígitos")]
        [StringLength(4, MinimumLength = 3, ErrorMessage = "El número de seguridad debe tener entre 3 y 4 dígitos")]
        [Display(Name = "Numero de Seguridad")]
        public string? NumeroSeguridad { get; set; }

        [Required(ErrorMessage = "Es requerido")]
        [Display(Name = "Fecha de Expiración")]
        public DateTime FechaExpiracion { get; set; }
    }


    public async Task RealizarAbono()
    {
        if (Abonodetalles.Monto > abono.Restante)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "El monto a abonar no puede ser mayor al restante",
                    Duration = 5000
                };
            NotificationService.Notify(mensaje);
            return;
        }

        if (Abonodetalles.Monto < 0.01f)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "El monto a abonar debe ser mayor a 0.01",
                    Duration = 5000
                };
            NotificationService.Notify(mensaje);
            return;
        }

        abono.Restante -= Abonodetalles.Monto;
        if (abono.Restante == 0)
        {
            abono.Pago = true;
        }
        abono.AbonoDetalle.Add(Abonodetalles);
        await abonosService.UpdateObject(abono);
        abonar = false;
        factura = true;
        Abonodetalles = new AbonosDetalle();
        Abonodetalles.Fecha = DateTime.Now;
        Abonodetalles.MetodoPagoId = 1;
        var mensaje2 = new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Exito",
                Detail = "Abono Realizado",
                Duration = 5000
            };
        NotificationService.Notify(mensaje2);
        return;
    }

    public string getLogo()
    {
        if (configuracion.Imagen != null && configuracion.Imagen.Length > 0)
        {
            string base64String = Convert.ToBase64String(configuracion.Imagen);
            return $"data:image/png;base64,{base64String}";
        }
        else
        {
            return "/bootstrap/img/ejemplo.png";
        }
    }
}
