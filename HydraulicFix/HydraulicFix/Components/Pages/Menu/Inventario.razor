@page "/Inventario"
@page "/Inventario/{ProductoId:int}"
@inject NavigationManager NavigationManager
@inject ProductosService productoService
@inject ApplicationDbContext dbContext
@using Shared.Models
@rendermode InteractiveServer

<PageTitle>Inventario</PageTitle>
<div class="container">
	<div class="card shadow">
		<div class="card-header">
			<h3 class="fw-bold mb-0">Inventario</h3>
		</div>
		<div class="card-body">
			<div class="row">
				<div class="col-md-3 mb-4 d-flex justify-content-end">
					<button class="btn btn-custom w-40 mb-5" @onclick="AbrirModal">Agregar producto</button>
				</div>
				<div class="col-3">
					<InputSelect id="filtro" class="form-select" @bind-Value="filtro">
						<option>Elije una opci&oacute;n</option>
						<option value="ID">Id</option>
						<option value="nombre">Nombre</option>
					</InputSelect>
				</div>
				<div class="col-md-4">
					<div class="input-group">
						<InputText class="form-control" @bind-Value="valorFiltro" placeholder="Ingrese el dato"></InputText>
						<button type="button" class="btn btn-info" @onclick="Buscar"><img src="/bootstrap/img/buscar.png" style="max-width: 24px; max-height: 24px;"></button>
					</div>
				</div>
				<table class="table table-striped table-bordered justify-content">
					<thead>
						<tr class="text-center">
							<th>Nombre</th>
							<th>Precio</th>
							<th>Descuento Aplicable</th>
							<th>ITBIS</th>
							<th>Disponible</th>
							<th>Editar</th>
						</tr>
					</thead>

					<tbody>
						@foreach (var producto in listaproductos)
						{
							<tr class="text-center">
								<td>@producto.Nombre</td>
								<td>@producto.Precio.ToString("N2")</td>
								<td>@producto.Descuento.ToString("N2")</td>
								<td>@producto.ITBIS.ToString("N2")</td>
								<td>@producto.Cantidad</td>
								<td class="text-center">
									<a class="btn btn-success bi bi-pencil" href="/EditarProductos"></a>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>

</div>




@code {
	[Parameter]
	public int ProductoId { get; set; }
	public List<Productos> listaproductos { get; set; } = new List<Productos>();
	public string? filtro { get; set; }
	public string? mensaje { get; set; }
	public string? valorFiltro { get; set; }

	protected override async Task OnInitializedAsync()
	{
		listaproductos = await productoService.GetAllObject();
	}


	public void AbrirModal()
	{
		NavigationManager.NavigateTo("/CrearProducto");
	}


	public async Task Buscar()
	{
		if (filtro == null)
		{
			mensaje = "Elija";
			StateHasChanged();
			await Task.Delay(3000);
			return;
		}

		switch (filtro)
		{
			case "id":
				if (int.TryParse(valorFiltro, out int id))
				{
					var buscarId = listaproductos.Where(c => c.ProductoId == id).FirstOrDefault();
					if (buscarId != null)
					{
						listaproductos.Clear();
						listaproductos.Add(buscarId);
						mensaje = "Cliente encontrado";
					}
					else
					{
						mensaje = "No se encontraron resultados";
					}
				}
				else
				{
					mensaje = "El valor ingresado para ClienteId no es válido";
				}
				StateHasChanged();
				break;

			case "nombre":
				var buscarNombre = listaproductos.Where(c => c.Nombre == valorFiltro).ToList();
				if (buscarNombre.Any())
				{
					listaproductos = buscarNombre;
					mensaje = "Producto encontrado";
				}
				else
				{
					mensaje = "No se encontraron resultados";
				}
				StateHasChanged();
				break;
		}
	}
}
