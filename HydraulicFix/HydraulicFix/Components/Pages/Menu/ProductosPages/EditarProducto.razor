@page "/EditarProductos/{ProductoId:int}"
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer
@inject ProductosService productosService

<PageTitle>Editar</PageTitle>
<EditForm Model="productos" OnValidSubmit="Editar">
	<DataAnnotationsValidator />

	<div class="container">
		<div class="card shadow-lg">
			<div class="card-header">
				<h3 class="fw-bold">Editar</h3>
			</div>
			<div class="card-body">
				<div class="row">
					<div class="col-6">
						<label class="fw-bold">Nombre</label>
						<InputText @bind-Value="productos.Nombre" class="form-control" />
						<ValidationMessage For="@(()=> productos.Nombre)" />
					</div>
				</div>
				<div class="row">
					<div class="col-6">
						<label class="fw-bold">Precio</label>
						<InputNumber @bind-Value="productos.Precio" class="form-control" />
					</div>
				</div>
				<div class="row">
					<div class="col-6">
						<label class="fw-bold">Descuento</label>
						<InputNumber @bind-Value="productos.Descuento" class="form-control" />
					</div>
				</div>
				<div class="row">
					<div class="col-6">
						<label class="fw-bold">ITBIS</label>
						<InputNumber @bind-Value="productos.ITBIS" class="form-control" />
					</div>
				</div>
				<div class="row">
					<div class="col-6">
						<label class="fw-bold">Disponible</label>
						<InputCheckbox @bind-Value="productos.EsDisponible" class="form-check-input" />
					</div>
				</div>
			</div>

			<div class="card-footer">
				<a href="/Inventario" class="btn btn-danger">Retroceder</a>
				<button type="submit" class="btn btn-primary bi bi-check">Listo</button>
			</div>
		</div>
		
	</div>

</EditForm>

@code {
	[Parameter]
	public int ProductoId { get; set; }
	public Productos productos { get; set; } = new Productos();

	protected override async Task OnInitializedAsync()
	{
		if (ProductoId > 0)
		{
			productos = await productosService.GetObject(ProductoId);
		}
	}

	public async Task Editar()
	{
		var buscado = await productosService.UpdateObject(productos);

	}

}
