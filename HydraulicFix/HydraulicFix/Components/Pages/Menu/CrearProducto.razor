@page "/CrearProducto"

@inject ProductosService productosService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using Shared.Models

<PageTitle>Agregar productos</PageTitle>
<EditForm Model="@productos" OnValidSubmit="GuardarProducto">
	<DataAnnotationsValidator />
	<div class="container">
		<div class="card shadow-lg">
			<div class="card-header">
				<h3 class="fw-bold">Registro de productos</h3>
			</div>

			<div class="card-body">

				<div class="row justify-content-center">
					<div class="col-md-4">
						<div class="form-group">
							<label for="nombreProducto" class="fw-bold">Nombre:</label>
							<InputText @bind-Value="productos.Nombre" class="form-control" />
							<ValidationMessage For="@(() => productos.Nombre)" />
						</div>
						<div class="form-group">
							<label for="categoriaProducto" class="fw-bold">Categoría ID:</label>
							<InputNumber @bind-Value="productos.CategoriaId" class="form-control" />
							<ValidationMessage For="@(() => productos.CategoriaId)" />
						</div>
						<div class="form-group">
							<label for="precioProducto" class="fw-bold">Precio:</label>
							<InputNumber @bind-Value="productos.Precio" class="form-control" />
							<ValidationMessage For="@(() => productos.Precio)" />
						</div>
						<div class="form-group">
							<label for="codigoProducto" class="fw-bold">Código:</label>
							<InputText @bind-Value="productos.Codigo" class="form-control" />
							<ValidationMessage For="@(() => productos.Codigo)" />
						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group">
							<label for="cantidadProducto" class="fw-bold">Cantidad:</label>
							<InputNumber @bind-Value="productos.Cantidad" class="form-control" />
							<ValidationMessage For="@(() => productos.Cantidad)" />
						</div>
						<div class="form-group">
							<label for="descuentoProducto" class="fw-bold">Descuento:</label>
							<InputNumber @bind-Value="productos.Descuento" class="form-control" />
							<ValidationMessage For="@(() => productos.Descuento)" />
						</div>
						<div class="form-group">
							<label for="proveedorProducto" class="fw-bold">Proveedor ID:</label>
							<InputNumber @bind-Value="productos.ProveedorId" class="form-control" />
							<ValidationMessage For="@(() => productos.ProveedorId)" />
						</div>
						<div class="form-group">
							<label for="itbisProducto" class="fw-bold">ITBIS:</label>
							<InputNumber @bind-Value="productos.ITBIS" class="form-control" />
						</div>
						<ValidationMessage For="@(() => productos.ITBIS)" />
					</div>
				</div>

			</div>
			<div class="card-footer justify-content-center d-flex">
				<button type="submit" class="btn btn-primary bi bi-floppy" @onclick="GuardarProducto">Guardar</button>
				<button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
				@mensaje
			</div>

		</div>
	</div>
	<DataAnnotationsValidator />
</EditForm>

@code {
	public Productos productos { get; set; } = new Productos();
	public string? mensaje = "";

	public async Task GuardarProducto()
	{
		var guarda = await productosService.AddObject(productos);
		if (guarda != null)
		{
			mensaje = "Guardado exitosamente";
			productos = new Productos();
		}
		else
		{
			mensaje = "Error al guardar el producto";
		}
	}


	private void Cancelar()
	{
		NavigationManager.NavigateTo("/Inventario");
	}
}
